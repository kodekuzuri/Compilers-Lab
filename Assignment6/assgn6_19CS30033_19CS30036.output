Terminals unused in grammar

    STRUCT
    TYPEDEF
    UNION
    HASH


Grammar

    0 $accept: translation_unit $end

    1 primary_expression: IDENTIFIER
    2                   | constant
    3                   | STRING_LITERAL
    4                   | '(' expression ')'

    5 constant: INTEGER_CONSTANT
    6         | FLOATING_CONSTANT
    7         | CHARACTER_CONSTANT

    8 M: %empty

    9 N: %empty

   10 changetable: %empty

   11 postfix_expression: primary_expression
   12                   | postfix_expression '[' expression ']'
   13                   | postfix_expression '(' ')'
   14                   | postfix_expression '(' argument_expression_list ')'
   15                   | postfix_expression DOT IDENTIFIER
   16                   | postfix_expression ARROW IDENTIFIER
   17                   | postfix_expression INCREMENT
   18                   | postfix_expression DECREMENT
   19                   | '(' type_name ')' '{' initializer_list '}'
   20                   | '(' type_name ')' '{' initializer_list COMMA '}'

   21 argument_expression_list: assignment_expression
   22                         | argument_expression_list COMMA assignment_expression

   23 unary_expression: postfix_expression
   24                 | INCREMENT unary_expression
   25                 | DECREMENT unary_expression
   26                 | unary_operator cast_expression
   27                 | SIZEOF unary_expression
   28                 | SIZEOF '(' type_name ')'

   29 unary_operator: BITWISEAND
   30               | STAR
   31               | PLUS
   32               | MINUS
   33               | NOT
   34               | EXCLAMATION

   35 cast_expression: unary_expression
   36                | '(' type_name ')' cast_expression

   37 multiplicative_expression: cast_expression
   38                          | multiplicative_expression STAR cast_expression
   39                          | multiplicative_expression DIVIDE cast_expression
   40                          | multiplicative_expression PERCENTAGE cast_expression

   41 additive_expression: multiplicative_expression
   42                    | additive_expression PLUS multiplicative_expression
   43                    | additive_expression MINUS multiplicative_expression

   44 shift_expression: additive_expression
   45                 | shift_expression LEFTSHIFT additive_expression
   46                 | shift_expression RIGHTSHIFT additive_expression

   47 relational_expression: shift_expression
   48                      | relational_expression LESSTHAN shift_expression
   49                      | relational_expression GREATERTHAN shift_expression
   50                      | relational_expression LESSEQUAL shift_expression
   51                      | relational_expression GREATEREQUAL shift_expression

   52 equality_expression: relational_expression
   53                    | equality_expression EQUAL relational_expression
   54                    | equality_expression NOTEQUAL relational_expression

   55 and_expression: equality_expression
   56               | and_expression BITWISEAND equality_expression

   57 exclusive_or_expression: and_expression
   58                        | exclusive_or_expression XOR and_expression

   59 inclusive_or_expression: exclusive_or_expression
   60                        | inclusive_or_expression BITWISEOR exclusive_or_expression

   61 logical_and_expression: inclusive_or_expression
   62                       | logical_and_expression N AND M inclusive_or_expression

   63 logical_or_expression: logical_and_expression
   64                      | logical_or_expression N OR M logical_and_expression

   65 conditional_expression: logical_or_expression
   66                       | logical_or_expression N QUESTIONMARK M expression N COLON M conditional_expression

   67 assignment_expression: conditional_expression
   68                      | unary_expression assignment_operator assignment_expression

   69 assignment_operator: ASSIGN
   70                    | MULTIPLYEQUAL
   71                    | DIVIDEEQUAL
   72                    | MODULOEQUAL
   73                    | PLUSEQUAL
   74                    | MINUSEQUAL
   75                    | SHIFTLEFTEQUAL
   76                    | SHIFTRIGHTEQUAL
   77                    | ANDEQUAL
   78                    | XOREQUAL
   79                    | OREQUAL

   80 expression: assignment_expression
   81           | expression COMMA assignment_expression

   82 constant_expression: conditional_expression

   83 declaration: declaration_specifiers init_declarator_list SEMICOLON
   84            | declaration_specifiers SEMICOLON

   85 declaration_specifiers: storage_class_specifier declaration_specifiers
   86                       | storage_class_specifier
   87                       | type_specifier declaration_specifiers
   88                       | type_specifier
   89                       | type_qualifier declaration_specifiers
   90                       | type_qualifier
   91                       | function_specifier declaration_specifiers
   92                       | function_specifier

   93 init_declarator_list: init_declarator
   94                     | init_declarator_list COMMA init_declarator

   95 init_declarator: declarator
   96                | declarator ASSIGN initializer

   97 storage_class_specifier: EXTERN
   98                        | AUTO
   99                        | REGISTER
  100                        | STATIC

  101 type_specifier: VOID
  102               | CHAR
  103               | SHORT
  104               | INT
  105               | LONG
  106               | FLOAT
  107               | DOUBLE
  108               | SIGNED
  109               | UNSIGNED
  110               | BOOL
  111               | COMPLEX
  112               | IMAGINARY
  113               | enum_specifier

  114 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt
  115                         | type_qualifier specifier_qualifier_list_opt

  116 specifier_qualifier_list_opt: %empty
  117                             | specifier_qualifier_list

  118 enum_specifier: ENUM identifier_opt '{' enumerator_list '}'
  119               | ENUM identifier_opt '{' enumerator_list COMMA '}'
  120               | ENUM IDENTIFIER

  121 identifier_opt: %empty
  122               | IDENTIFIER

  123 enumerator_list: enumerator
  124                | enumerator_list COMMA enumerator

  125 enumerator: IDENTIFIER
  126           | IDENTIFIER ASSIGN constant_expression

  127 type_qualifier: CONST
  128               | RESTRICT
  129               | VOLATILE

  130 function_specifier: INLINE

  131 declarator: pointer direct_declarator
  132           | direct_declarator

  133 direct_declarator: IDENTIFIER
  134                  | '(' declarator ')'
  135                  | direct_declarator '[' type_qualifier_list assignment_expression ']'
  136                  | direct_declarator '[' type_qualifier_list ']'
  137                  | direct_declarator '[' assignment_expression ']'
  138                  | direct_declarator '[' ']'
  139                  | direct_declarator '[' STATIC type_qualifier_list assignment_expression ']'
  140                  | direct_declarator '[' STATIC assignment_expression ']'
  141                  | direct_declarator '[' type_qualifier_list STAR ']'
  142                  | direct_declarator '[' STAR ']'
  143                  | direct_declarator '(' changetable parameter_type_list ')'
  144                  | direct_declarator '(' identifier_list ')'
  145                  | direct_declarator '(' changetable ')'

  146 type_qualifier_list_opt: %empty
  147                        | type_qualifier_list

  148 pointer: STAR type_qualifier_list_opt
  149        | STAR type_qualifier_list_opt pointer

  150 type_qualifier_list: type_qualifier
  151                    | type_qualifier_list type_qualifier

  152 parameter_type_list: parameter_list
  153                    | parameter_list COMMA ELLIPSIS

  154 parameter_list: parameter_declaration
  155               | parameter_list COMMA parameter_declaration

  156 parameter_declaration: declaration_specifiers declarator
  157                      | declaration_specifiers

  158 identifier_list: IDENTIFIER
  159                | identifier_list COMMA IDENTIFIER

  160 type_name: specifier_qualifier_list

  161 initializer: assignment_expression
  162            | '{' initializer_list '}'
  163            | '{' initializer_list COMMA '}'

  164 initializer_list: designation_opt initializer
  165                 | initializer_list COMMA designation_opt initializer

  166 designation_opt: %empty
  167                | designation

  168 designation: designator_list ASSIGN

  169 designator_list: designator
  170                | designator_list designator

  171 designator: '[' constant_expression ']'
  172           | DOT IDENTIFIER

  173 statement: labeled_statement
  174          | compound_statement
  175          | expression_statement
  176          | selection_statement
  177          | iteration_statement
  178          | jump_statement

  179 labeled_statement: IDENTIFIER COLON M statement
  180                  | CASE constant_expression COLON statement
  181                  | DEFAULT COLON statement

  182 compound_statement: '{' block_item_list '}'
  183                   | '{' '}'

  184 block_item_list: block_item
  185                | block_item_list M block_item

  186 block_item: declaration
  187           | statement

  188 expression_statement: expression SEMICOLON
  189                     | SEMICOLON

  190 selection_statement: IF '(' expression N ')' M statement N
  191                    | IF '(' expression N ')' M statement N ELSE M statement
  192                    | SWITCH '(' expression ')' statement

  193 iteration_statement: WHILE M '(' expression ')' M statement
  194                    | DO M statement M WHILE '(' expression ')' SEMICOLON
  195                    | FOR '(' expression_statement M expression_statement ')' M statement
  196                    | FOR '(' expression_statement M expression_statement M expression N ')' M statement

  197 jump_statement: GOTO IDENTIFIER SEMICOLON
  198               | CONTINUE SEMICOLON
  199               | BREAK SEMICOLON
  200               | RETURN expression SEMICOLON
  201               | RETURN SEMICOLON

  202 translation_unit: external_declaration
  203                 | translation_unit external_declaration

  204 external_declaration: function_definition
  205                     | declaration

  206 function_definition: declaration_specifiers declarator declaration_list changetable compound_statement
  207                    | declaration_specifiers declarator changetable compound_statement

  208 declaration_list: declaration
  209                 | declaration_list declaration


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 4 13 14 19 20 28 36 134 143 144 145 190 191 192 193 194 195 196
    ')' (41) 4 13 14 19 20 28 36 134 143 144 145 190 191 192 193 194 195 196
    '[' (91) 12 135 136 137 138 139 140 141 142 171
    ']' (93) 12 135 136 137 138 139 140 141 142 171
    '{' (123) 19 20 118 119 162 163 182 183
    '}' (125) 19 20 118 119 162 163 182 183
    error (256)
    AUTO (258) 98
    BREAK (259) 199
    CASE (260) 180
    CHAR (261) 102
    CONST (262) 127
    CONTINUE (263) 198
    DEFAULT (264) 181
    DO (265) 194
    ELSE (266) 191
    ENUM (267) 118 119 120
    EXTERN (268) 97
    REGISTER (269) 99
    FLOAT (270) 106
    FOR (271) 195 196
    GOTO (272) 197
    IF (273) 190 191
    INLINE (274) 130
    LONG (275) 105
    RESTRICT (276) 128
    RETURN (277) 200 201
    SHORT (278) 103
    SIGNED (279) 108
    SIZEOF (280) 27 28
    STATIC (281) 100 139 140
    STRUCT (282)
    SWITCH (283) 192
    INT (284) 104
    DOUBLE (285) 107
    TYPEDEF (286)
    UNION (287)
    UNSIGNED (288) 109
    VOID (289) 101
    VOLATILE (290) 129
    WHILE (291) 193 194
    BOOL (292) 110
    COMPLEX (293) 111
    IMAGINARY (294) 112
    IDENTIFIER <sym> (295) 1 15 16 120 122 125 126 133 158 159 172 179 197
    INTEGER_CONSTANT <intVal> (296) 5
    FLOATING_CONSTANT <floatVal> (297) 6
    CHARACTER_CONSTANT <charVal> (298) 7
    STRING_LITERAL <charVal> (299) 3
    DOT (300) 15 172
    ARROW (301) 16
    INCREMENT (302) 17 24
    DECREMENT (303) 18 25
    BITWISEAND (304) 29 56
    STAR (305) 30 38 141 142 148 149
    PLUS (306) 31 42
    MINUS (307) 32 43
    NOT (308) 33
    EXCLAMATION (309) 34
    DIVIDE (310) 39
    PERCENTAGE (311) 40
    LEFTSHIFT (312) 45
    RIGHTSHIFT (313) 46
    LESSTHAN (314) 48
    GREATERTHAN (315) 49
    LESSEQUAL (316) 50
    GREATEREQUAL (317) 51
    EQUAL (318) 53
    NOTEQUAL (319) 54
    XOR (320) 58
    BITWISEOR (321) 60
    AND (322) 62
    OR (323) 64
    QUESTIONMARK (324) 66
    COLON (325) 66 179 180 181
    SEMICOLON (326) 83 84 188 189 194 197 198 199 200 201
    ELLIPSIS (327) 153
    ASSIGN (328) 69 96 126 168
    MULTIPLYEQUAL (329) 70
    DIVIDEEQUAL (330) 71
    MODULOEQUAL (331) 72
    PLUSEQUAL (332) 73
    MINUSEQUAL (333) 74
    SHIFTLEFTEQUAL (334) 75
    SHIFTRIGHTEQUAL (335) 76
    ANDEQUAL (336) 77
    XOREQUAL (337) 78
    OREQUAL (338) 79
    COMMA (339) 20 22 81 94 119 124 153 155 159 163 165
    HASH (340)
    "then" (341)


Nonterminals, with rules where they appear

    $accept (93)
        on left: 0
    primary_expression <exp> (94)
        on left: 1 2 3 4
        on right: 11
    constant <sym> (95)
        on left: 5 6 7
        on right: 2
    M <instrNum> (96)
        on left: 8
        on right: 62 64 66 179 185 190 191 193 194 195 196
    N <stmt> (97)
        on left: 9
        on right: 62 64 66 190 191 196
    changetable (98)
        on left: 10
        on right: 143 145 206 207
    postfix_expression <arr> (99)
        on left: 11 12 13 14 15 16 17 18 19 20
        on right: 12 13 14 15 16 17 18 23
    argument_expression_list <numParams> (100)
        on left: 21 22
        on right: 14 22
    unary_expression <arr> (101)
        on left: 23 24 25 26 27 28
        on right: 24 25 27 35 68
    unary_operator <unaryOp> (102)
        on left: 29 30 31 32 33 34
        on right: 26
    cast_expression <arr> (103)
        on left: 35 36
        on right: 26 36 37 38 39 40
    multiplicative_expression <exp> (104)
        on left: 37 38 39 40
        on right: 38 39 40 41 42 43
    additive_expression <exp> (105)
        on left: 41 42 43
        on right: 42 43 44 45 46
    shift_expression <exp> (106)
        on left: 44 45 46
        on right: 45 46 47 48 49 50 51
    relational_expression <exp> (107)
        on left: 47 48 49 50 51
        on right: 48 49 50 51 52 53 54
    equality_expression <exp> (108)
        on left: 52 53 54
        on right: 53 54 55 56
    and_expression <exp> (109)
        on left: 55 56
        on right: 56 57 58
    exclusive_or_expression <exp> (110)
        on left: 57 58
        on right: 58 59 60
    inclusive_or_expression <exp> (111)
        on left: 59 60
        on right: 60 61 62
    logical_and_expression <exp> (112)
        on left: 61 62
        on right: 62 63 64
    logical_or_expression <exp> (113)
        on left: 63 64
        on right: 64 65 66
    conditional_expression <exp> (114)
        on left: 65 66
        on right: 66 67 82
    assignment_expression <exp> (115)
        on left: 67 68
        on right: 21 22 68 80 81 135 137 139 140 161
    assignment_operator (116)
        on left: 69 70 71 72 73 74 75 76 77 78 79
        on right: 68
    expression <exp> (117)
        on left: 80 81
        on right: 4 12 66 81 188 190 191 192 193 194 196 200
    constant_expression (118)
        on left: 82
        on right: 126 171 180
    declaration (119)
        on left: 83 84
        on right: 186 205 208 209
    declaration_specifiers (120)
        on left: 85 86 87 88 89 90 91 92
        on right: 83 84 85 87 89 91 156 157 206 207
    init_declarator_list (121)
        on left: 93 94
        on right: 83 94
    init_declarator <sym> (122)
        on left: 95 96
        on right: 93 94
    storage_class_specifier (123)
        on left: 97 98 99 100
        on right: 85 86
    type_specifier (124)
        on left: 101 102 103 104 105 106 107 108 109 110 111 112 113
        on right: 87 88 114
    specifier_qualifier_list (125)
        on left: 114 115
        on right: 117 160
    specifier_qualifier_list_opt (126)
        on left: 116 117
        on right: 114 115
    enum_specifier (127)
        on left: 118 119 120
        on right: 113
    identifier_opt (128)
        on left: 121 122
        on right: 118 119
    enumerator_list (129)
        on left: 123 124
        on right: 118 119 124
    enumerator (130)
        on left: 125 126
        on right: 123 124
    type_qualifier (131)
        on left: 127 128 129
        on right: 89 90 115 150 151
    function_specifier (132)
        on left: 130
        on right: 91 92
    declarator <sym> (133)
        on left: 131 132
        on right: 95 96 134 156 206 207
    direct_declarator <sym> (134)
        on left: 133 134 135 136 137 138 139 140 141 142 143 144 145
        on right: 131 132 135 136 137 138 139 140 141 142 143 144 145
    type_qualifier_list_opt (135)
        on left: 146 147
        on right: 148 149
    pointer <stype> (136)
        on left: 148 149
        on right: 131 149
    type_qualifier_list (137)
        on left: 150 151
        on right: 135 136 139 141 147 151
    parameter_type_list (138)
        on left: 152 153
        on right: 143
    parameter_list (139)
        on left: 154 155
        on right: 152 153 155
    parameter_declaration (140)
        on left: 156 157
        on right: 154 155
    identifier_list (141)
        on left: 158 159
        on right: 144 159
    type_name (142)
        on left: 160
        on right: 19 20 28 36
    initializer <sym> (143)
        on left: 161 162 163
        on right: 96 164 165
    initializer_list (144)
        on left: 164 165
        on right: 19 20 162 163 165
    designation_opt (145)
        on left: 166 167
        on right: 164 165
    designation (146)
        on left: 168
        on right: 167
    designator_list (147)
        on left: 169 170
        on right: 168 170
    designator (148)
        on left: 171 172
        on right: 169 170
    statement <stmt> (149)
        on left: 173 174 175 176 177 178
        on right: 179 180 181 187 190 191 192 193 194 195 196
    labeled_statement <stmt> (150)
        on left: 179 180 181
        on right: 173
    compound_statement <stmt> (151)
        on left: 182 183
        on right: 174 206 207
    block_item_list <stmt> (152)
        on left: 184 185
        on right: 182 185
    block_item <stmt> (153)
        on left: 186 187
        on right: 184 185
    expression_statement <exp> (154)
        on left: 188 189
        on right: 175 195 196
    selection_statement <stmt> (155)
        on left: 190 191 192
        on right: 176
    iteration_statement <stmt> (156)
        on left: 193 194 195 196
        on right: 177
    jump_statement <stmt> (157)
        on left: 197 198 199 200 201
        on right: 178
    translation_unit (158)
        on left: 202 203
        on right: 0 203
    external_declaration (159)
        on left: 204 205
        on right: 202 203
    function_definition (160)
        on left: 206 207
        on right: 204
    declaration_list (161)
        on left: 208 209
        on right: 206 209


State 0

    0 $accept: . translation_unit $end

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    ENUM       shift, and go to state 4
    EXTERN     shift, and go to state 5
    REGISTER   shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    LONG       shift, and go to state 9
    RESTRICT   shift, and go to state 10
    SHORT      shift, and go to state 11
    SIGNED     shift, and go to state 12
    STATIC     shift, and go to state 13
    INT        shift, and go to state 14
    DOUBLE     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    translation_unit         go to state 29
    external_declaration     go to state 30
    function_definition      go to state 31


State 1

   98 storage_class_specifier: AUTO .

    $default  reduce using rule 98 (storage_class_specifier)


State 2

  102 type_specifier: CHAR .

    $default  reduce using rule 102 (type_specifier)


State 3

  127 type_qualifier: CONST .

    $default  reduce using rule 127 (type_qualifier)


State 4

  118 enum_specifier: ENUM . identifier_opt '{' enumerator_list '}'
  119               | ENUM . identifier_opt '{' enumerator_list COMMA '}'
  120               | ENUM . IDENTIFIER

    IDENTIFIER  shift, and go to state 32

    $default  reduce using rule 121 (identifier_opt)

    identifier_opt  go to state 33


State 5

   97 storage_class_specifier: EXTERN .

    $default  reduce using rule 97 (storage_class_specifier)


State 6

   99 storage_class_specifier: REGISTER .

    $default  reduce using rule 99 (storage_class_specifier)


State 7

  106 type_specifier: FLOAT .

    $default  reduce using rule 106 (type_specifier)


State 8

  130 function_specifier: INLINE .

    $default  reduce using rule 130 (function_specifier)


State 9

  105 type_specifier: LONG .

    $default  reduce using rule 105 (type_specifier)


State 10

  128 type_qualifier: RESTRICT .

    $default  reduce using rule 128 (type_qualifier)


State 11

  103 type_specifier: SHORT .

    $default  reduce using rule 103 (type_specifier)


State 12

  108 type_specifier: SIGNED .

    $default  reduce using rule 108 (type_specifier)


State 13

  100 storage_class_specifier: STATIC .

    $default  reduce using rule 100 (storage_class_specifier)


State 14

  104 type_specifier: INT .

    $default  reduce using rule 104 (type_specifier)


State 15

  107 type_specifier: DOUBLE .

    $default  reduce using rule 107 (type_specifier)


State 16

  109 type_specifier: UNSIGNED .

    $default  reduce using rule 109 (type_specifier)


State 17

  101 type_specifier: VOID .

    $default  reduce using rule 101 (type_specifier)


State 18

  129 type_qualifier: VOLATILE .

    $default  reduce using rule 129 (type_qualifier)


State 19

  110 type_specifier: BOOL .

    $default  reduce using rule 110 (type_specifier)


State 20

  111 type_specifier: COMPLEX .

    $default  reduce using rule 111 (type_specifier)


State 21

  112 type_specifier: IMAGINARY .

    $default  reduce using rule 112 (type_specifier)


State 22

  205 external_declaration: declaration .

    $default  reduce using rule 205 (external_declaration)


State 23

   83 declaration: declaration_specifiers . init_declarator_list SEMICOLON
   84            | declaration_specifiers . SEMICOLON
  206 function_definition: declaration_specifiers . declarator declaration_list changetable compound_statement
  207                    | declaration_specifiers . declarator changetable compound_statement

    IDENTIFIER  shift, and go to state 34
    STAR        shift, and go to state 35
    SEMICOLON   shift, and go to state 36
    '('         shift, and go to state 37

    init_declarator_list  go to state 38
    init_declarator       go to state 39
    declarator            go to state 40
    direct_declarator     go to state 41
    pointer               go to state 42


State 24

   85 declaration_specifiers: storage_class_specifier . declaration_specifiers
   86                       | storage_class_specifier .

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    ENUM       shift, and go to state 4
    EXTERN     shift, and go to state 5
    REGISTER   shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    LONG       shift, and go to state 9
    RESTRICT   shift, and go to state 10
    SHORT      shift, and go to state 11
    SIGNED     shift, and go to state 12
    STATIC     shift, and go to state 13
    INT        shift, and go to state 14
    DOUBLE     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 86 (declaration_specifiers)

    declaration_specifiers   go to state 43
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 25

   87 declaration_specifiers: type_specifier . declaration_specifiers
   88                       | type_specifier .

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    ENUM       shift, and go to state 4
    EXTERN     shift, and go to state 5
    REGISTER   shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    LONG       shift, and go to state 9
    RESTRICT   shift, and go to state 10
    SHORT      shift, and go to state 11
    SIGNED     shift, and go to state 12
    STATIC     shift, and go to state 13
    INT        shift, and go to state 14
    DOUBLE     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 88 (declaration_specifiers)

    declaration_specifiers   go to state 44
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 26

  113 type_specifier: enum_specifier .

    $default  reduce using rule 113 (type_specifier)


State 27

   89 declaration_specifiers: type_qualifier . declaration_specifiers
   90                       | type_qualifier .

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    ENUM       shift, and go to state 4
    EXTERN     shift, and go to state 5
    REGISTER   shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    LONG       shift, and go to state 9
    RESTRICT   shift, and go to state 10
    SHORT      shift, and go to state 11
    SIGNED     shift, and go to state 12
    STATIC     shift, and go to state 13
    INT        shift, and go to state 14
    DOUBLE     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 90 (declaration_specifiers)

    declaration_specifiers   go to state 45
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 28

   91 declaration_specifiers: function_specifier . declaration_specifiers
   92                       | function_specifier .

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    ENUM       shift, and go to state 4
    EXTERN     shift, and go to state 5
    REGISTER   shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    LONG       shift, and go to state 9
    RESTRICT   shift, and go to state 10
    SHORT      shift, and go to state 11
    SIGNED     shift, and go to state 12
    STATIC     shift, and go to state 13
    INT        shift, and go to state 14
    DOUBLE     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 92 (declaration_specifiers)

    declaration_specifiers   go to state 46
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 29

    0 $accept: translation_unit . $end
  203 translation_unit: translation_unit . external_declaration

    $end       shift, and go to state 47
    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    ENUM       shift, and go to state 4
    EXTERN     shift, and go to state 5
    REGISTER   shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    LONG       shift, and go to state 9
    RESTRICT   shift, and go to state 10
    SHORT      shift, and go to state 11
    SIGNED     shift, and go to state 12
    STATIC     shift, and go to state 13
    INT        shift, and go to state 14
    DOUBLE     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    external_declaration     go to state 48
    function_definition      go to state 31


State 30

  202 translation_unit: external_declaration .

    $default  reduce using rule 202 (translation_unit)


State 31

  204 external_declaration: function_definition .

    $default  reduce using rule 204 (external_declaration)


State 32

  120 enum_specifier: ENUM IDENTIFIER .
  122 identifier_opt: IDENTIFIER .

    '{'       reduce using rule 122 (identifier_opt)
    $default  reduce using rule 120 (enum_specifier)


State 33

  118 enum_specifier: ENUM identifier_opt . '{' enumerator_list '}'
  119               | ENUM identifier_opt . '{' enumerator_list COMMA '}'

    '{'  shift, and go to state 49


State 34

  133 direct_declarator: IDENTIFIER .

    $default  reduce using rule 133 (direct_declarator)


State 35

  148 pointer: STAR . type_qualifier_list_opt
  149        | STAR . type_qualifier_list_opt pointer

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 10
    VOLATILE  shift, and go to state 18

    $default  reduce using rule 146 (type_qualifier_list_opt)

    type_qualifier           go to state 50
    type_qualifier_list_opt  go to state 51
    type_qualifier_list      go to state 52


State 36

   84 declaration: declaration_specifiers SEMICOLON .

    $default  reduce using rule 84 (declaration)


State 37

  134 direct_declarator: '(' . declarator ')'

    IDENTIFIER  shift, and go to state 34
    STAR        shift, and go to state 35
    '('         shift, and go to state 37

    declarator         go to state 53
    direct_declarator  go to state 41
    pointer            go to state 42


State 38

   83 declaration: declaration_specifiers init_declarator_list . SEMICOLON
   94 init_declarator_list: init_declarator_list . COMMA init_declarator

    SEMICOLON  shift, and go to state 54
    COMMA      shift, and go to state 55


State 39

   93 init_declarator_list: init_declarator .

    $default  reduce using rule 93 (init_declarator_list)


State 40

   95 init_declarator: declarator .
   96                | declarator . ASSIGN initializer
  206 function_definition: declaration_specifiers declarator . declaration_list changetable compound_statement
  207                    | declaration_specifiers declarator . changetable compound_statement

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    ENUM       shift, and go to state 4
    EXTERN     shift, and go to state 5
    REGISTER   shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    LONG       shift, and go to state 9
    RESTRICT   shift, and go to state 10
    SHORT      shift, and go to state 11
    SIGNED     shift, and go to state 12
    STATIC     shift, and go to state 13
    INT        shift, and go to state 14
    DOUBLE     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21
    ASSIGN     shift, and go to state 56

    '{'       reduce using rule 10 (changetable)
    $default  reduce using rule 95 (init_declarator)

    changetable              go to state 57
    declaration              go to state 58
    declaration_specifiers   go to state 59
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    declaration_list         go to state 60


State 41

  132 declarator: direct_declarator .
  135 direct_declarator: direct_declarator . '[' type_qualifier_list assignment_expression ']'
  136                  | direct_declarator . '[' type_qualifier_list ']'
  137                  | direct_declarator . '[' assignment_expression ']'
  138                  | direct_declarator . '[' ']'
  139                  | direct_declarator . '[' STATIC type_qualifier_list assignment_expression ']'
  140                  | direct_declarator . '[' STATIC assignment_expression ']'
  141                  | direct_declarator . '[' type_qualifier_list STAR ']'
  142                  | direct_declarator . '[' STAR ']'
  143                  | direct_declarator . '(' changetable parameter_type_list ')'
  144                  | direct_declarator . '(' identifier_list ')'
  145                  | direct_declarator . '(' changetable ')'

    '('  shift, and go to state 61
    '['  shift, and go to state 62

    $default  reduce using rule 132 (declarator)


State 42

  131 declarator: pointer . direct_declarator

    IDENTIFIER  shift, and go to state 34
    '('         shift, and go to state 37

    direct_declarator  go to state 63


State 43

   85 declaration_specifiers: storage_class_specifier declaration_specifiers .

    $default  reduce using rule 85 (declaration_specifiers)


State 44

   87 declaration_specifiers: type_specifier declaration_specifiers .

    $default  reduce using rule 87 (declaration_specifiers)


State 45

   89 declaration_specifiers: type_qualifier declaration_specifiers .

    $default  reduce using rule 89 (declaration_specifiers)


State 46

   91 declaration_specifiers: function_specifier declaration_specifiers .

    $default  reduce using rule 91 (declaration_specifiers)


State 47

    0 $accept: translation_unit $end .

    $default  accept


State 48

  203 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 203 (translation_unit)


State 49

  118 enum_specifier: ENUM identifier_opt '{' . enumerator_list '}'
  119               | ENUM identifier_opt '{' . enumerator_list COMMA '}'

    IDENTIFIER  shift, and go to state 64

    enumerator_list  go to state 65
    enumerator       go to state 66


State 50

  150 type_qualifier_list: type_qualifier .

    $default  reduce using rule 150 (type_qualifier_list)


State 51

  148 pointer: STAR type_qualifier_list_opt .
  149        | STAR type_qualifier_list_opt . pointer

    STAR  shift, and go to state 35

    $default  reduce using rule 148 (pointer)

    pointer  go to state 67


State 52

  147 type_qualifier_list_opt: type_qualifier_list .
  151 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 10
    VOLATILE  shift, and go to state 18

    $default  reduce using rule 147 (type_qualifier_list_opt)

    type_qualifier  go to state 68


State 53

  134 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 69


State 54

   83 declaration: declaration_specifiers init_declarator_list SEMICOLON .

    $default  reduce using rule 83 (declaration)


State 55

   94 init_declarator_list: init_declarator_list COMMA . init_declarator

    IDENTIFIER  shift, and go to state 34
    STAR        shift, and go to state 35
    '('         shift, and go to state 37

    init_declarator    go to state 70
    declarator         go to state 71
    direct_declarator  go to state 41
    pointer            go to state 42


State 56

   96 init_declarator: declarator ASSIGN . initializer

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86
    '{'                 shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 105
    initializer                go to state 106


State 57

  207 function_definition: declaration_specifiers declarator changetable . compound_statement

    '{'  shift, and go to state 107

    compound_statement  go to state 108


State 58

  208 declaration_list: declaration .

    $default  reduce using rule 208 (declaration_list)


State 59

   83 declaration: declaration_specifiers . init_declarator_list SEMICOLON
   84            | declaration_specifiers . SEMICOLON

    IDENTIFIER  shift, and go to state 34
    STAR        shift, and go to state 35
    SEMICOLON   shift, and go to state 36
    '('         shift, and go to state 37

    init_declarator_list  go to state 38
    init_declarator       go to state 39
    declarator            go to state 71
    direct_declarator     go to state 41
    pointer               go to state 42


State 60

  206 function_definition: declaration_specifiers declarator declaration_list . changetable compound_statement
  209 declaration_list: declaration_list . declaration

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    ENUM       shift, and go to state 4
    EXTERN     shift, and go to state 5
    REGISTER   shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    LONG       shift, and go to state 9
    RESTRICT   shift, and go to state 10
    SHORT      shift, and go to state 11
    SIGNED     shift, and go to state 12
    STATIC     shift, and go to state 13
    INT        shift, and go to state 14
    DOUBLE     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 10 (changetable)

    changetable              go to state 109
    declaration              go to state 110
    declaration_specifiers   go to state 59
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 61

  143 direct_declarator: direct_declarator '(' . changetable parameter_type_list ')'
  144                  | direct_declarator '(' . identifier_list ')'
  145                  | direct_declarator '(' . changetable ')'

    IDENTIFIER  shift, and go to state 111

    $default  reduce using rule 10 (changetable)

    changetable      go to state 112
    identifier_list  go to state 113


State 62

  135 direct_declarator: direct_declarator '[' . type_qualifier_list assignment_expression ']'
  136                  | direct_declarator '[' . type_qualifier_list ']'
  137                  | direct_declarator '[' . assignment_expression ']'
  138                  | direct_declarator '[' . ']'
  139                  | direct_declarator '[' . STATIC type_qualifier_list assignment_expression ']'
  140                  | direct_declarator '[' . STATIC assignment_expression ']'
  141                  | direct_declarator '[' . type_qualifier_list STAR ']'
  142                  | direct_declarator '[' . STAR ']'

    CONST               shift, and go to state 3
    RESTRICT            shift, and go to state 10
    SIZEOF              shift, and go to state 72
    STATIC              shift, and go to state 114
    VOLATILE            shift, and go to state 18
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 115
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86
    ']'                 shift, and go to state 116

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 117
    type_qualifier             go to state 50
    type_qualifier_list        go to state 118


State 63

  131 declarator: pointer direct_declarator .
  135 direct_declarator: direct_declarator . '[' type_qualifier_list assignment_expression ']'
  136                  | direct_declarator . '[' type_qualifier_list ']'
  137                  | direct_declarator . '[' assignment_expression ']'
  138                  | direct_declarator . '[' ']'
  139                  | direct_declarator . '[' STATIC type_qualifier_list assignment_expression ']'
  140                  | direct_declarator . '[' STATIC assignment_expression ']'
  141                  | direct_declarator . '[' type_qualifier_list STAR ']'
  142                  | direct_declarator . '[' STAR ']'
  143                  | direct_declarator . '(' changetable parameter_type_list ')'
  144                  | direct_declarator . '(' identifier_list ')'
  145                  | direct_declarator . '(' changetable ')'

    '('  shift, and go to state 61
    '['  shift, and go to state 62

    $default  reduce using rule 131 (declarator)


State 64

  125 enumerator: IDENTIFIER .
  126           | IDENTIFIER . ASSIGN constant_expression

    ASSIGN  shift, and go to state 119

    $default  reduce using rule 125 (enumerator)


State 65

  118 enum_specifier: ENUM identifier_opt '{' enumerator_list . '}'
  119               | ENUM identifier_opt '{' enumerator_list . COMMA '}'
  124 enumerator_list: enumerator_list . COMMA enumerator

    COMMA  shift, and go to state 120
    '}'    shift, and go to state 121


State 66

  123 enumerator_list: enumerator .

    $default  reduce using rule 123 (enumerator_list)


State 67

  149 pointer: STAR type_qualifier_list_opt pointer .

    $default  reduce using rule 149 (pointer)


State 68

  151 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 151 (type_qualifier_list)


State 69

  134 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 134 (direct_declarator)


State 70

   94 init_declarator_list: init_declarator_list COMMA init_declarator .

    $default  reduce using rule 94 (init_declarator_list)


State 71

   95 init_declarator: declarator .
   96                | declarator . ASSIGN initializer

    ASSIGN  shift, and go to state 56

    $default  reduce using rule 95 (init_declarator)


State 72

   27 unary_expression: SIZEOF . unary_expression
   28                 | SIZEOF . '(' type_name ')'

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 122

    primary_expression  go to state 88
    constant            go to state 89
    postfix_expression  go to state 90
    unary_expression    go to state 123
    unary_operator      go to state 92


State 73

    1 primary_expression: IDENTIFIER .

    $default  reduce using rule 1 (primary_expression)


State 74

    5 constant: INTEGER_CONSTANT .

    $default  reduce using rule 5 (constant)


State 75

    6 constant: FLOATING_CONSTANT .

    $default  reduce using rule 6 (constant)


State 76

    7 constant: CHARACTER_CONSTANT .

    $default  reduce using rule 7 (constant)


State 77

    3 primary_expression: STRING_LITERAL .

    $default  reduce using rule 3 (primary_expression)


State 78

   24 unary_expression: INCREMENT . unary_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 124

    primary_expression  go to state 88
    constant            go to state 89
    postfix_expression  go to state 90
    unary_expression    go to state 125
    unary_operator      go to state 92


State 79

   25 unary_expression: DECREMENT . unary_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 124

    primary_expression  go to state 88
    constant            go to state 89
    postfix_expression  go to state 90
    unary_expression    go to state 126
    unary_operator      go to state 92


State 80

   29 unary_operator: BITWISEAND .

    $default  reduce using rule 29 (unary_operator)


State 81

   30 unary_operator: STAR .

    $default  reduce using rule 30 (unary_operator)


State 82

   31 unary_operator: PLUS .

    $default  reduce using rule 31 (unary_operator)


State 83

   32 unary_operator: MINUS .

    $default  reduce using rule 32 (unary_operator)


State 84

   33 unary_operator: NOT .

    $default  reduce using rule 33 (unary_operator)


State 85

   34 unary_operator: EXCLAMATION .

    $default  reduce using rule 34 (unary_operator)


State 86

    4 primary_expression: '(' . expression ')'
   19 postfix_expression: '(' . type_name ')' '{' initializer_list '}'
   20                   | '(' . type_name ')' '{' initializer_list COMMA '}'
   36 cast_expression: '(' . type_name ')' cast_expression

    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    ENUM                shift, and go to state 4
    FLOAT               shift, and go to state 7
    LONG                shift, and go to state 9
    RESTRICT            shift, and go to state 10
    SHORT               shift, and go to state 11
    SIGNED              shift, and go to state 12
    SIZEOF              shift, and go to state 72
    INT                 shift, and go to state 14
    DOUBLE              shift, and go to state 15
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    BOOL                shift, and go to state 19
    COMPLEX             shift, and go to state 20
    IMAGINARY           shift, and go to state 21
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 127
    expression                 go to state 128
    type_specifier             go to state 129
    specifier_qualifier_list   go to state 130
    enum_specifier             go to state 26
    type_qualifier             go to state 131
    type_name                  go to state 132


State 87

  162 initializer: '{' . initializer_list '}'
  163            | '{' . initializer_list COMMA '}'

    DOT  shift, and go to state 133
    '['  shift, and go to state 134

    $default  reduce using rule 166 (designation_opt)

    initializer_list  go to state 135
    designation_opt   go to state 136
    designation       go to state 137
    designator_list   go to state 138
    designator        go to state 139


State 88

   11 postfix_expression: primary_expression .

    $default  reduce using rule 11 (postfix_expression)


State 89

    2 primary_expression: constant .

    $default  reduce using rule 2 (primary_expression)


State 90

   12 postfix_expression: postfix_expression . '[' expression ']'
   13                   | postfix_expression . '(' ')'
   14                   | postfix_expression . '(' argument_expression_list ')'
   15                   | postfix_expression . DOT IDENTIFIER
   16                   | postfix_expression . ARROW IDENTIFIER
   17                   | postfix_expression . INCREMENT
   18                   | postfix_expression . DECREMENT
   23 unary_expression: postfix_expression .

    DOT        shift, and go to state 140
    ARROW      shift, and go to state 141
    INCREMENT  shift, and go to state 142
    DECREMENT  shift, and go to state 143
    '('        shift, and go to state 144
    '['        shift, and go to state 145

    $default  reduce using rule 23 (unary_expression)


State 91

   35 cast_expression: unary_expression .
   68 assignment_expression: unary_expression . assignment_operator assignment_expression

    ASSIGN           shift, and go to state 146
    MULTIPLYEQUAL    shift, and go to state 147
    DIVIDEEQUAL      shift, and go to state 148
    MODULOEQUAL      shift, and go to state 149
    PLUSEQUAL        shift, and go to state 150
    MINUSEQUAL       shift, and go to state 151
    SHIFTLEFTEQUAL   shift, and go to state 152
    SHIFTRIGHTEQUAL  shift, and go to state 153
    ANDEQUAL         shift, and go to state 154
    XOREQUAL         shift, and go to state 155
    OREQUAL          shift, and go to state 156

    $default  reduce using rule 35 (cast_expression)

    assignment_operator  go to state 157


State 92

   26 unary_expression: unary_operator . cast_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression  go to state 88
    constant            go to state 89
    postfix_expression  go to state 90
    unary_expression    go to state 158
    unary_operator      go to state 92
    cast_expression     go to state 159


State 93

   37 multiplicative_expression: cast_expression .

    $default  reduce using rule 37 (multiplicative_expression)


State 94

   38 multiplicative_expression: multiplicative_expression . STAR cast_expression
   39                          | multiplicative_expression . DIVIDE cast_expression
   40                          | multiplicative_expression . PERCENTAGE cast_expression
   41 additive_expression: multiplicative_expression .

    STAR        shift, and go to state 160
    DIVIDE      shift, and go to state 161
    PERCENTAGE  shift, and go to state 162

    $default  reduce using rule 41 (additive_expression)


State 95

   42 additive_expression: additive_expression . PLUS multiplicative_expression
   43                    | additive_expression . MINUS multiplicative_expression
   44 shift_expression: additive_expression .

    PLUS   shift, and go to state 163
    MINUS  shift, and go to state 164

    $default  reduce using rule 44 (shift_expression)


State 96

   45 shift_expression: shift_expression . LEFTSHIFT additive_expression
   46                 | shift_expression . RIGHTSHIFT additive_expression
   47 relational_expression: shift_expression .

    LEFTSHIFT   shift, and go to state 165
    RIGHTSHIFT  shift, and go to state 166

    $default  reduce using rule 47 (relational_expression)


State 97

   48 relational_expression: relational_expression . LESSTHAN shift_expression
   49                      | relational_expression . GREATERTHAN shift_expression
   50                      | relational_expression . LESSEQUAL shift_expression
   51                      | relational_expression . GREATEREQUAL shift_expression
   52 equality_expression: relational_expression .

    LESSTHAN      shift, and go to state 167
    GREATERTHAN   shift, and go to state 168
    LESSEQUAL     shift, and go to state 169
    GREATEREQUAL  shift, and go to state 170

    $default  reduce using rule 52 (equality_expression)


State 98

   53 equality_expression: equality_expression . EQUAL relational_expression
   54                    | equality_expression . NOTEQUAL relational_expression
   55 and_expression: equality_expression .

    EQUAL     shift, and go to state 171
    NOTEQUAL  shift, and go to state 172

    $default  reduce using rule 55 (and_expression)


State 99

   56 and_expression: and_expression . BITWISEAND equality_expression
   57 exclusive_or_expression: and_expression .

    BITWISEAND  shift, and go to state 173

    $default  reduce using rule 57 (exclusive_or_expression)


State 100

   58 exclusive_or_expression: exclusive_or_expression . XOR and_expression
   59 inclusive_or_expression: exclusive_or_expression .

    XOR  shift, and go to state 174

    $default  reduce using rule 59 (inclusive_or_expression)


State 101

   60 inclusive_or_expression: inclusive_or_expression . BITWISEOR exclusive_or_expression
   61 logical_and_expression: inclusive_or_expression .

    BITWISEOR  shift, and go to state 175

    $default  reduce using rule 61 (logical_and_expression)


State 102

   62 logical_and_expression: logical_and_expression . N AND M inclusive_or_expression
   63 logical_or_expression: logical_and_expression .

    AND       reduce using rule 9 (N)
    $default  reduce using rule 63 (logical_or_expression)

    N  go to state 176


State 103

   64 logical_or_expression: logical_or_expression . N OR M logical_and_expression
   65 conditional_expression: logical_or_expression .
   66                       | logical_or_expression . N QUESTIONMARK M expression N COLON M conditional_expression

    OR            reduce using rule 9 (N)
    QUESTIONMARK  reduce using rule 9 (N)
    $default      reduce using rule 65 (conditional_expression)

    N  go to state 177


State 104

   67 assignment_expression: conditional_expression .

    $default  reduce using rule 67 (assignment_expression)


State 105

  161 initializer: assignment_expression .

    $default  reduce using rule 161 (initializer)


State 106

   96 init_declarator: declarator ASSIGN initializer .

    $default  reduce using rule 96 (init_declarator)


State 107

  182 compound_statement: '{' . block_item_list '}'
  183                   | '{' . '}'

    AUTO                shift, and go to state 1
    BREAK               shift, and go to state 178
    CASE                shift, and go to state 179
    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    CONTINUE            shift, and go to state 180
    DEFAULT             shift, and go to state 181
    DO                  shift, and go to state 182
    ENUM                shift, and go to state 4
    EXTERN              shift, and go to state 5
    REGISTER            shift, and go to state 6
    FLOAT               shift, and go to state 7
    FOR                 shift, and go to state 183
    GOTO                shift, and go to state 184
    IF                  shift, and go to state 185
    INLINE              shift, and go to state 8
    LONG                shift, and go to state 9
    RESTRICT            shift, and go to state 10
    RETURN              shift, and go to state 186
    SHORT               shift, and go to state 11
    SIGNED              shift, and go to state 12
    SIZEOF              shift, and go to state 72
    STATIC              shift, and go to state 13
    SWITCH              shift, and go to state 187
    INT                 shift, and go to state 14
    DOUBLE              shift, and go to state 15
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    WHILE               shift, and go to state 188
    BOOL                shift, and go to state 19
    COMPLEX             shift, and go to state 20
    IMAGINARY           shift, and go to state 21
    IDENTIFIER          shift, and go to state 189
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    SEMICOLON           shift, and go to state 190
    '('                 shift, and go to state 86
    '{'                 shift, and go to state 107
    '}'                 shift, and go to state 191

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 127
    expression                 go to state 192
    declaration                go to state 193
    declaration_specifiers     go to state 59
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 194
    labeled_statement          go to state 195
    compound_statement         go to state 196
    block_item_list            go to state 197
    block_item                 go to state 198
    expression_statement       go to state 199
    selection_statement        go to state 200
    iteration_statement        go to state 201
    jump_statement             go to state 202


State 108

  207 function_definition: declaration_specifiers declarator changetable compound_statement .

    $default  reduce using rule 207 (function_definition)


State 109

  206 function_definition: declaration_specifiers declarator declaration_list changetable . compound_statement

    '{'  shift, and go to state 107

    compound_statement  go to state 203


State 110

  209 declaration_list: declaration_list declaration .

    $default  reduce using rule 209 (declaration_list)


State 111

  158 identifier_list: IDENTIFIER .

    $default  reduce using rule 158 (identifier_list)


State 112

  143 direct_declarator: direct_declarator '(' changetable . parameter_type_list ')'
  145                  | direct_declarator '(' changetable . ')'

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    ENUM       shift, and go to state 4
    EXTERN     shift, and go to state 5
    REGISTER   shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    LONG       shift, and go to state 9
    RESTRICT   shift, and go to state 10
    SHORT      shift, and go to state 11
    SIGNED     shift, and go to state 12
    STATIC     shift, and go to state 13
    INT        shift, and go to state 14
    DOUBLE     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21
    ')'        shift, and go to state 204

    declaration_specifiers   go to state 205
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    parameter_type_list      go to state 206
    parameter_list           go to state 207
    parameter_declaration    go to state 208


State 113

  144 direct_declarator: direct_declarator '(' identifier_list . ')'
  159 identifier_list: identifier_list . COMMA IDENTIFIER

    COMMA  shift, and go to state 209
    ')'    shift, and go to state 210


State 114

  139 direct_declarator: direct_declarator '[' STATIC . type_qualifier_list assignment_expression ']'
  140                  | direct_declarator '[' STATIC . assignment_expression ']'

    CONST               shift, and go to state 3
    RESTRICT            shift, and go to state 10
    SIZEOF              shift, and go to state 72
    VOLATILE            shift, and go to state 18
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 211
    type_qualifier             go to state 50
    type_qualifier_list        go to state 212


State 115

   30 unary_operator: STAR .
  142 direct_declarator: direct_declarator '[' STAR . ']'

    ']'  shift, and go to state 213

    $default  reduce using rule 30 (unary_operator)


State 116

  138 direct_declarator: direct_declarator '[' ']' .

    $default  reduce using rule 138 (direct_declarator)


State 117

  137 direct_declarator: direct_declarator '[' assignment_expression . ']'

    ']'  shift, and go to state 214


State 118

  135 direct_declarator: direct_declarator '[' type_qualifier_list . assignment_expression ']'
  136                  | direct_declarator '[' type_qualifier_list . ']'
  141                  | direct_declarator '[' type_qualifier_list . STAR ']'
  151 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST               shift, and go to state 3
    RESTRICT            shift, and go to state 10
    SIZEOF              shift, and go to state 72
    VOLATILE            shift, and go to state 18
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 215
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86
    ']'                 shift, and go to state 216

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 217
    type_qualifier             go to state 68


State 119

  126 enumerator: IDENTIFIER ASSIGN . constant_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 158
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 218
    constant_expression        go to state 219


State 120

  119 enum_specifier: ENUM identifier_opt '{' enumerator_list COMMA . '}'
  124 enumerator_list: enumerator_list COMMA . enumerator

    IDENTIFIER  shift, and go to state 64
    '}'         shift, and go to state 220

    enumerator  go to state 221


State 121

  118 enum_specifier: ENUM identifier_opt '{' enumerator_list '}' .

    $default  reduce using rule 118 (enum_specifier)


State 122

    4 primary_expression: '(' . expression ')'
   19 postfix_expression: '(' . type_name ')' '{' initializer_list '}'
   20                   | '(' . type_name ')' '{' initializer_list COMMA '}'
   28 unary_expression: SIZEOF '(' . type_name ')'

    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    ENUM                shift, and go to state 4
    FLOAT               shift, and go to state 7
    LONG                shift, and go to state 9
    RESTRICT            shift, and go to state 10
    SHORT               shift, and go to state 11
    SIGNED              shift, and go to state 12
    SIZEOF              shift, and go to state 72
    INT                 shift, and go to state 14
    DOUBLE              shift, and go to state 15
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    BOOL                shift, and go to state 19
    COMPLEX             shift, and go to state 20
    IMAGINARY           shift, and go to state 21
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 127
    expression                 go to state 128
    type_specifier             go to state 129
    specifier_qualifier_list   go to state 130
    enum_specifier             go to state 26
    type_qualifier             go to state 131
    type_name                  go to state 222


State 123

   27 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 27 (unary_expression)


State 124

    4 primary_expression: '(' . expression ')'
   19 postfix_expression: '(' . type_name ')' '{' initializer_list '}'
   20                   | '(' . type_name ')' '{' initializer_list COMMA '}'

    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    ENUM                shift, and go to state 4
    FLOAT               shift, and go to state 7
    LONG                shift, and go to state 9
    RESTRICT            shift, and go to state 10
    SHORT               shift, and go to state 11
    SIGNED              shift, and go to state 12
    SIZEOF              shift, and go to state 72
    INT                 shift, and go to state 14
    DOUBLE              shift, and go to state 15
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    BOOL                shift, and go to state 19
    COMPLEX             shift, and go to state 20
    IMAGINARY           shift, and go to state 21
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 127
    expression                 go to state 128
    type_specifier             go to state 129
    specifier_qualifier_list   go to state 130
    enum_specifier             go to state 26
    type_qualifier             go to state 131
    type_name                  go to state 223


State 125

   24 unary_expression: INCREMENT unary_expression .

    $default  reduce using rule 24 (unary_expression)


State 126

   25 unary_expression: DECREMENT unary_expression .

    $default  reduce using rule 25 (unary_expression)


State 127

   80 expression: assignment_expression .

    $default  reduce using rule 80 (expression)


State 128

    4 primary_expression: '(' expression . ')'
   81 expression: expression . COMMA assignment_expression

    COMMA  shift, and go to state 224
    ')'    shift, and go to state 225


State 129

  114 specifier_qualifier_list: type_specifier . specifier_qualifier_list_opt

    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    ENUM       shift, and go to state 4
    FLOAT      shift, and go to state 7
    LONG       shift, and go to state 9
    RESTRICT   shift, and go to state 10
    SHORT      shift, and go to state 11
    SIGNED     shift, and go to state 12
    INT        shift, and go to state 14
    DOUBLE     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 116 (specifier_qualifier_list_opt)

    type_specifier                go to state 129
    specifier_qualifier_list      go to state 226
    specifier_qualifier_list_opt  go to state 227
    enum_specifier                go to state 26
    type_qualifier                go to state 131


State 130

  160 type_name: specifier_qualifier_list .

    $default  reduce using rule 160 (type_name)


State 131

  115 specifier_qualifier_list: type_qualifier . specifier_qualifier_list_opt

    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    ENUM       shift, and go to state 4
    FLOAT      shift, and go to state 7
    LONG       shift, and go to state 9
    RESTRICT   shift, and go to state 10
    SHORT      shift, and go to state 11
    SIGNED     shift, and go to state 12
    INT        shift, and go to state 14
    DOUBLE     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 116 (specifier_qualifier_list_opt)

    type_specifier                go to state 129
    specifier_qualifier_list      go to state 226
    specifier_qualifier_list_opt  go to state 228
    enum_specifier                go to state 26
    type_qualifier                go to state 131


State 132

   19 postfix_expression: '(' type_name . ')' '{' initializer_list '}'
   20                   | '(' type_name . ')' '{' initializer_list COMMA '}'
   36 cast_expression: '(' type_name . ')' cast_expression

    ')'  shift, and go to state 229


State 133

  172 designator: DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 230


State 134

  171 designator: '[' . constant_expression ']'

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 158
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 218
    constant_expression        go to state 231


State 135

  162 initializer: '{' initializer_list . '}'
  163            | '{' initializer_list . COMMA '}'
  165 initializer_list: initializer_list . COMMA designation_opt initializer

    COMMA  shift, and go to state 232
    '}'    shift, and go to state 233


State 136

  164 initializer_list: designation_opt . initializer

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86
    '{'                 shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 105
    initializer                go to state 234


State 137

  167 designation_opt: designation .

    $default  reduce using rule 167 (designation_opt)


State 138

  168 designation: designator_list . ASSIGN
  170 designator_list: designator_list . designator

    DOT     shift, and go to state 133
    ASSIGN  shift, and go to state 235
    '['     shift, and go to state 134

    designator  go to state 236


State 139

  169 designator_list: designator .

    $default  reduce using rule 169 (designator_list)


State 140

   15 postfix_expression: postfix_expression DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 237


State 141

   16 postfix_expression: postfix_expression ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 238


State 142

   17 postfix_expression: postfix_expression INCREMENT .

    $default  reduce using rule 17 (postfix_expression)


State 143

   18 postfix_expression: postfix_expression DECREMENT .

    $default  reduce using rule 18 (postfix_expression)


State 144

   13 postfix_expression: postfix_expression '(' . ')'
   14                   | postfix_expression '(' . argument_expression_list ')'

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86
    ')'                 shift, and go to state 239

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    argument_expression_list   go to state 240
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 241


State 145

   12 postfix_expression: postfix_expression '[' . expression ']'

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 127
    expression                 go to state 242


State 146

   69 assignment_operator: ASSIGN .

    $default  reduce using rule 69 (assignment_operator)


State 147

   70 assignment_operator: MULTIPLYEQUAL .

    $default  reduce using rule 70 (assignment_operator)


State 148

   71 assignment_operator: DIVIDEEQUAL .

    $default  reduce using rule 71 (assignment_operator)


State 149

   72 assignment_operator: MODULOEQUAL .

    $default  reduce using rule 72 (assignment_operator)


State 150

   73 assignment_operator: PLUSEQUAL .

    $default  reduce using rule 73 (assignment_operator)


State 151

   74 assignment_operator: MINUSEQUAL .

    $default  reduce using rule 74 (assignment_operator)


State 152

   75 assignment_operator: SHIFTLEFTEQUAL .

    $default  reduce using rule 75 (assignment_operator)


State 153

   76 assignment_operator: SHIFTRIGHTEQUAL .

    $default  reduce using rule 76 (assignment_operator)


State 154

   77 assignment_operator: ANDEQUAL .

    $default  reduce using rule 77 (assignment_operator)


State 155

   78 assignment_operator: XOREQUAL .

    $default  reduce using rule 78 (assignment_operator)


State 156

   79 assignment_operator: OREQUAL .

    $default  reduce using rule 79 (assignment_operator)


State 157

   68 assignment_expression: unary_expression assignment_operator . assignment_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 243


State 158

   35 cast_expression: unary_expression .

    $default  reduce using rule 35 (cast_expression)


State 159

   26 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 26 (unary_expression)


State 160

   38 multiplicative_expression: multiplicative_expression STAR . cast_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression  go to state 88
    constant            go to state 89
    postfix_expression  go to state 90
    unary_expression    go to state 158
    unary_operator      go to state 92
    cast_expression     go to state 244


State 161

   39 multiplicative_expression: multiplicative_expression DIVIDE . cast_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression  go to state 88
    constant            go to state 89
    postfix_expression  go to state 90
    unary_expression    go to state 158
    unary_operator      go to state 92
    cast_expression     go to state 245


State 162

   40 multiplicative_expression: multiplicative_expression PERCENTAGE . cast_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression  go to state 88
    constant            go to state 89
    postfix_expression  go to state 90
    unary_expression    go to state 158
    unary_operator      go to state 92
    cast_expression     go to state 246


State 163

   42 additive_expression: additive_expression PLUS . multiplicative_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 158
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 247


State 164

   43 additive_expression: additive_expression MINUS . multiplicative_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 158
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 248


State 165

   45 shift_expression: shift_expression LEFTSHIFT . additive_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 158
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 249


State 166

   46 shift_expression: shift_expression RIGHTSHIFT . additive_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 158
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 250


State 167

   48 relational_expression: relational_expression LESSTHAN . shift_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 158
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 251


State 168

   49 relational_expression: relational_expression GREATERTHAN . shift_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 158
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 252


State 169

   50 relational_expression: relational_expression LESSEQUAL . shift_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 158
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 253


State 170

   51 relational_expression: relational_expression GREATEREQUAL . shift_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 158
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 254


State 171

   53 equality_expression: equality_expression EQUAL . relational_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 158
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 255


State 172

   54 equality_expression: equality_expression NOTEQUAL . relational_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 158
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 256


State 173

   56 and_expression: and_expression BITWISEAND . equality_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 158
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 257


State 174

   58 exclusive_or_expression: exclusive_or_expression XOR . and_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 158
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 258


State 175

   60 inclusive_or_expression: inclusive_or_expression BITWISEOR . exclusive_or_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 158
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 259


State 176

   62 logical_and_expression: logical_and_expression N . AND M inclusive_or_expression

    AND  shift, and go to state 260


State 177

   64 logical_or_expression: logical_or_expression N . OR M logical_and_expression
   66 conditional_expression: logical_or_expression N . QUESTIONMARK M expression N COLON M conditional_expression

    OR            shift, and go to state 261
    QUESTIONMARK  shift, and go to state 262


State 178

  199 jump_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 263


State 179

  180 labeled_statement: CASE . constant_expression COLON statement

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 158
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 218
    constant_expression        go to state 264


State 180

  198 jump_statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 265


State 181

  181 labeled_statement: DEFAULT . COLON statement

    COLON  shift, and go to state 266


State 182

  194 iteration_statement: DO . M statement M WHILE '(' expression ')' SEMICOLON

    $default  reduce using rule 8 (M)

    M  go to state 267


State 183

  195 iteration_statement: FOR . '(' expression_statement M expression_statement ')' M statement
  196                    | FOR . '(' expression_statement M expression_statement M expression N ')' M statement

    '('  shift, and go to state 268


State 184

  197 jump_statement: GOTO . IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 269


State 185

  190 selection_statement: IF . '(' expression N ')' M statement N
  191                    | IF . '(' expression N ')' M statement N ELSE M statement

    '('  shift, and go to state 270


State 186

  200 jump_statement: RETURN . expression SEMICOLON
  201               | RETURN . SEMICOLON

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    SEMICOLON           shift, and go to state 271
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 127
    expression                 go to state 272


State 187

  192 selection_statement: SWITCH . '(' expression ')' statement

    '('  shift, and go to state 273


State 188

  193 iteration_statement: WHILE . M '(' expression ')' M statement

    $default  reduce using rule 8 (M)

    M  go to state 274


State 189

    1 primary_expression: IDENTIFIER .
  179 labeled_statement: IDENTIFIER . COLON M statement

    COLON  shift, and go to state 275

    $default  reduce using rule 1 (primary_expression)


State 190

  189 expression_statement: SEMICOLON .

    $default  reduce using rule 189 (expression_statement)


State 191

  183 compound_statement: '{' '}' .

    $default  reduce using rule 183 (compound_statement)


State 192

   81 expression: expression . COMMA assignment_expression
  188 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 276
    COMMA      shift, and go to state 224


State 193

  186 block_item: declaration .

    $default  reduce using rule 186 (block_item)


State 194

  187 block_item: statement .

    $default  reduce using rule 187 (block_item)


State 195

  173 statement: labeled_statement .

    $default  reduce using rule 173 (statement)


State 196

  174 statement: compound_statement .

    $default  reduce using rule 174 (statement)


State 197

  182 compound_statement: '{' block_item_list . '}'
  185 block_item_list: block_item_list . M block_item

    '}'  shift, and go to state 277

    $default  reduce using rule 8 (M)

    M  go to state 278


State 198

  184 block_item_list: block_item .

    $default  reduce using rule 184 (block_item_list)


State 199

  175 statement: expression_statement .

    $default  reduce using rule 175 (statement)


State 200

  176 statement: selection_statement .

    $default  reduce using rule 176 (statement)


State 201

  177 statement: iteration_statement .

    $default  reduce using rule 177 (statement)


State 202

  178 statement: jump_statement .

    $default  reduce using rule 178 (statement)


State 203

  206 function_definition: declaration_specifiers declarator declaration_list changetable compound_statement .

    $default  reduce using rule 206 (function_definition)


State 204

  145 direct_declarator: direct_declarator '(' changetable ')' .

    $default  reduce using rule 145 (direct_declarator)


State 205

  156 parameter_declaration: declaration_specifiers . declarator
  157                      | declaration_specifiers .

    IDENTIFIER  shift, and go to state 34
    STAR        shift, and go to state 35
    '('         shift, and go to state 37

    $default  reduce using rule 157 (parameter_declaration)

    declarator         go to state 279
    direct_declarator  go to state 41
    pointer            go to state 42


State 206

  143 direct_declarator: direct_declarator '(' changetable parameter_type_list . ')'

    ')'  shift, and go to state 280


State 207

  152 parameter_type_list: parameter_list .
  153                    | parameter_list . COMMA ELLIPSIS
  155 parameter_list: parameter_list . COMMA parameter_declaration

    COMMA  shift, and go to state 281

    $default  reduce using rule 152 (parameter_type_list)


State 208

  154 parameter_list: parameter_declaration .

    $default  reduce using rule 154 (parameter_list)


State 209

  159 identifier_list: identifier_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 282


State 210

  144 direct_declarator: direct_declarator '(' identifier_list ')' .

    $default  reduce using rule 144 (direct_declarator)


State 211

  140 direct_declarator: direct_declarator '[' STATIC assignment_expression . ']'

    ']'  shift, and go to state 283


State 212

  139 direct_declarator: direct_declarator '[' STATIC type_qualifier_list . assignment_expression ']'
  151 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST               shift, and go to state 3
    RESTRICT            shift, and go to state 10
    SIZEOF              shift, and go to state 72
    VOLATILE            shift, and go to state 18
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 284
    type_qualifier             go to state 68


State 213

  142 direct_declarator: direct_declarator '[' STAR ']' .

    $default  reduce using rule 142 (direct_declarator)


State 214

  137 direct_declarator: direct_declarator '[' assignment_expression ']' .

    $default  reduce using rule 137 (direct_declarator)


State 215

   30 unary_operator: STAR .
  141 direct_declarator: direct_declarator '[' type_qualifier_list STAR . ']'

    ']'  shift, and go to state 285

    $default  reduce using rule 30 (unary_operator)


State 216

  136 direct_declarator: direct_declarator '[' type_qualifier_list ']' .

    $default  reduce using rule 136 (direct_declarator)


State 217

  135 direct_declarator: direct_declarator '[' type_qualifier_list assignment_expression . ']'

    ']'  shift, and go to state 286


State 218

   82 constant_expression: conditional_expression .

    $default  reduce using rule 82 (constant_expression)


State 219

  126 enumerator: IDENTIFIER ASSIGN constant_expression .

    $default  reduce using rule 126 (enumerator)


State 220

  119 enum_specifier: ENUM identifier_opt '{' enumerator_list COMMA '}' .

    $default  reduce using rule 119 (enum_specifier)


State 221

  124 enumerator_list: enumerator_list COMMA enumerator .

    $default  reduce using rule 124 (enumerator_list)


State 222

   19 postfix_expression: '(' type_name . ')' '{' initializer_list '}'
   20                   | '(' type_name . ')' '{' initializer_list COMMA '}'
   28 unary_expression: SIZEOF '(' type_name . ')'

    ')'  shift, and go to state 287


State 223

   19 postfix_expression: '(' type_name . ')' '{' initializer_list '}'
   20                   | '(' type_name . ')' '{' initializer_list COMMA '}'

    ')'  shift, and go to state 288


State 224

   81 expression: expression COMMA . assignment_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 289


State 225

    4 primary_expression: '(' expression ')' .

    $default  reduce using rule 4 (primary_expression)


State 226

  117 specifier_qualifier_list_opt: specifier_qualifier_list .

    $default  reduce using rule 117 (specifier_qualifier_list_opt)


State 227

  114 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt .

    $default  reduce using rule 114 (specifier_qualifier_list)


State 228

  115 specifier_qualifier_list: type_qualifier specifier_qualifier_list_opt .

    $default  reduce using rule 115 (specifier_qualifier_list)


State 229

   19 postfix_expression: '(' type_name ')' . '{' initializer_list '}'
   20                   | '(' type_name ')' . '{' initializer_list COMMA '}'
   36 cast_expression: '(' type_name ')' . cast_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86
    '{'                 shift, and go to state 290

    primary_expression  go to state 88
    constant            go to state 89
    postfix_expression  go to state 90
    unary_expression    go to state 158
    unary_operator      go to state 92
    cast_expression     go to state 291


State 230

  172 designator: DOT IDENTIFIER .

    $default  reduce using rule 172 (designator)


State 231

  171 designator: '[' constant_expression . ']'

    ']'  shift, and go to state 292


State 232

  163 initializer: '{' initializer_list COMMA . '}'
  165 initializer_list: initializer_list COMMA . designation_opt initializer

    DOT  shift, and go to state 133
    '['  shift, and go to state 134
    '}'  shift, and go to state 293

    $default  reduce using rule 166 (designation_opt)

    designation_opt  go to state 294
    designation      go to state 137
    designator_list  go to state 138
    designator       go to state 139


State 233

  162 initializer: '{' initializer_list '}' .

    $default  reduce using rule 162 (initializer)


State 234

  164 initializer_list: designation_opt initializer .

    $default  reduce using rule 164 (initializer_list)


State 235

  168 designation: designator_list ASSIGN .

    $default  reduce using rule 168 (designation)


State 236

  170 designator_list: designator_list designator .

    $default  reduce using rule 170 (designator_list)


State 237

   15 postfix_expression: postfix_expression DOT IDENTIFIER .

    $default  reduce using rule 15 (postfix_expression)


State 238

   16 postfix_expression: postfix_expression ARROW IDENTIFIER .

    $default  reduce using rule 16 (postfix_expression)


State 239

   13 postfix_expression: postfix_expression '(' ')' .

    $default  reduce using rule 13 (postfix_expression)


State 240

   14 postfix_expression: postfix_expression '(' argument_expression_list . ')'
   22 argument_expression_list: argument_expression_list . COMMA assignment_expression

    COMMA  shift, and go to state 295
    ')'    shift, and go to state 296


State 241

   21 argument_expression_list: assignment_expression .

    $default  reduce using rule 21 (argument_expression_list)


State 242

   12 postfix_expression: postfix_expression '[' expression . ']'
   81 expression: expression . COMMA assignment_expression

    COMMA  shift, and go to state 224
    ']'    shift, and go to state 297


State 243

   68 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 68 (assignment_expression)


State 244

   38 multiplicative_expression: multiplicative_expression STAR cast_expression .

    $default  reduce using rule 38 (multiplicative_expression)


State 245

   39 multiplicative_expression: multiplicative_expression DIVIDE cast_expression .

    $default  reduce using rule 39 (multiplicative_expression)


State 246

   40 multiplicative_expression: multiplicative_expression PERCENTAGE cast_expression .

    $default  reduce using rule 40 (multiplicative_expression)


State 247

   38 multiplicative_expression: multiplicative_expression . STAR cast_expression
   39                          | multiplicative_expression . DIVIDE cast_expression
   40                          | multiplicative_expression . PERCENTAGE cast_expression
   42 additive_expression: additive_expression PLUS multiplicative_expression .

    STAR        shift, and go to state 160
    DIVIDE      shift, and go to state 161
    PERCENTAGE  shift, and go to state 162

    $default  reduce using rule 42 (additive_expression)


State 248

   38 multiplicative_expression: multiplicative_expression . STAR cast_expression
   39                          | multiplicative_expression . DIVIDE cast_expression
   40                          | multiplicative_expression . PERCENTAGE cast_expression
   43 additive_expression: additive_expression MINUS multiplicative_expression .

    STAR        shift, and go to state 160
    DIVIDE      shift, and go to state 161
    PERCENTAGE  shift, and go to state 162

    $default  reduce using rule 43 (additive_expression)


State 249

   42 additive_expression: additive_expression . PLUS multiplicative_expression
   43                    | additive_expression . MINUS multiplicative_expression
   45 shift_expression: shift_expression LEFTSHIFT additive_expression .

    PLUS   shift, and go to state 163
    MINUS  shift, and go to state 164

    $default  reduce using rule 45 (shift_expression)


State 250

   42 additive_expression: additive_expression . PLUS multiplicative_expression
   43                    | additive_expression . MINUS multiplicative_expression
   46 shift_expression: shift_expression RIGHTSHIFT additive_expression .

    PLUS   shift, and go to state 163
    MINUS  shift, and go to state 164

    $default  reduce using rule 46 (shift_expression)


State 251

   45 shift_expression: shift_expression . LEFTSHIFT additive_expression
   46                 | shift_expression . RIGHTSHIFT additive_expression
   48 relational_expression: relational_expression LESSTHAN shift_expression .

    LEFTSHIFT   shift, and go to state 165
    RIGHTSHIFT  shift, and go to state 166

    $default  reduce using rule 48 (relational_expression)


State 252

   45 shift_expression: shift_expression . LEFTSHIFT additive_expression
   46                 | shift_expression . RIGHTSHIFT additive_expression
   49 relational_expression: relational_expression GREATERTHAN shift_expression .

    LEFTSHIFT   shift, and go to state 165
    RIGHTSHIFT  shift, and go to state 166

    $default  reduce using rule 49 (relational_expression)


State 253

   45 shift_expression: shift_expression . LEFTSHIFT additive_expression
   46                 | shift_expression . RIGHTSHIFT additive_expression
   50 relational_expression: relational_expression LESSEQUAL shift_expression .

    LEFTSHIFT   shift, and go to state 165
    RIGHTSHIFT  shift, and go to state 166

    $default  reduce using rule 50 (relational_expression)


State 254

   45 shift_expression: shift_expression . LEFTSHIFT additive_expression
   46                 | shift_expression . RIGHTSHIFT additive_expression
   51 relational_expression: relational_expression GREATEREQUAL shift_expression .

    LEFTSHIFT   shift, and go to state 165
    RIGHTSHIFT  shift, and go to state 166

    $default  reduce using rule 51 (relational_expression)


State 255

   48 relational_expression: relational_expression . LESSTHAN shift_expression
   49                      | relational_expression . GREATERTHAN shift_expression
   50                      | relational_expression . LESSEQUAL shift_expression
   51                      | relational_expression . GREATEREQUAL shift_expression
   53 equality_expression: equality_expression EQUAL relational_expression .

    LESSTHAN      shift, and go to state 167
    GREATERTHAN   shift, and go to state 168
    LESSEQUAL     shift, and go to state 169
    GREATEREQUAL  shift, and go to state 170

    $default  reduce using rule 53 (equality_expression)


State 256

   48 relational_expression: relational_expression . LESSTHAN shift_expression
   49                      | relational_expression . GREATERTHAN shift_expression
   50                      | relational_expression . LESSEQUAL shift_expression
   51                      | relational_expression . GREATEREQUAL shift_expression
   54 equality_expression: equality_expression NOTEQUAL relational_expression .

    LESSTHAN      shift, and go to state 167
    GREATERTHAN   shift, and go to state 168
    LESSEQUAL     shift, and go to state 169
    GREATEREQUAL  shift, and go to state 170

    $default  reduce using rule 54 (equality_expression)


State 257

   53 equality_expression: equality_expression . EQUAL relational_expression
   54                    | equality_expression . NOTEQUAL relational_expression
   56 and_expression: and_expression BITWISEAND equality_expression .

    EQUAL     shift, and go to state 171
    NOTEQUAL  shift, and go to state 172

    $default  reduce using rule 56 (and_expression)


State 258

   56 and_expression: and_expression . BITWISEAND equality_expression
   58 exclusive_or_expression: exclusive_or_expression XOR and_expression .

    BITWISEAND  shift, and go to state 173

    $default  reduce using rule 58 (exclusive_or_expression)


State 259

   58 exclusive_or_expression: exclusive_or_expression . XOR and_expression
   60 inclusive_or_expression: inclusive_or_expression BITWISEOR exclusive_or_expression .

    XOR  shift, and go to state 174

    $default  reduce using rule 60 (inclusive_or_expression)


State 260

   62 logical_and_expression: logical_and_expression N AND . M inclusive_or_expression

    $default  reduce using rule 8 (M)

    M  go to state 298


State 261

   64 logical_or_expression: logical_or_expression N OR . M logical_and_expression

    $default  reduce using rule 8 (M)

    M  go to state 299


State 262

   66 conditional_expression: logical_or_expression N QUESTIONMARK . M expression N COLON M conditional_expression

    $default  reduce using rule 8 (M)

    M  go to state 300


State 263

  199 jump_statement: BREAK SEMICOLON .

    $default  reduce using rule 199 (jump_statement)


State 264

  180 labeled_statement: CASE constant_expression . COLON statement

    COLON  shift, and go to state 301


State 265

  198 jump_statement: CONTINUE SEMICOLON .

    $default  reduce using rule 198 (jump_statement)


State 266

  181 labeled_statement: DEFAULT COLON . statement

    BREAK               shift, and go to state 178
    CASE                shift, and go to state 179
    CONTINUE            shift, and go to state 180
    DEFAULT             shift, and go to state 181
    DO                  shift, and go to state 182
    FOR                 shift, and go to state 183
    GOTO                shift, and go to state 184
    IF                  shift, and go to state 185
    RETURN              shift, and go to state 186
    SIZEOF              shift, and go to state 72
    SWITCH              shift, and go to state 187
    WHILE               shift, and go to state 188
    IDENTIFIER          shift, and go to state 189
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    SEMICOLON           shift, and go to state 190
    '('                 shift, and go to state 86
    '{'                 shift, and go to state 107

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 127
    expression                 go to state 192
    statement                  go to state 302
    labeled_statement          go to state 195
    compound_statement         go to state 196
    expression_statement       go to state 199
    selection_statement        go to state 200
    iteration_statement        go to state 201
    jump_statement             go to state 202


State 267

  194 iteration_statement: DO M . statement M WHILE '(' expression ')' SEMICOLON

    BREAK               shift, and go to state 178
    CASE                shift, and go to state 179
    CONTINUE            shift, and go to state 180
    DEFAULT             shift, and go to state 181
    DO                  shift, and go to state 182
    FOR                 shift, and go to state 183
    GOTO                shift, and go to state 184
    IF                  shift, and go to state 185
    RETURN              shift, and go to state 186
    SIZEOF              shift, and go to state 72
    SWITCH              shift, and go to state 187
    WHILE               shift, and go to state 188
    IDENTIFIER          shift, and go to state 189
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    SEMICOLON           shift, and go to state 190
    '('                 shift, and go to state 86
    '{'                 shift, and go to state 107

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 127
    expression                 go to state 192
    statement                  go to state 303
    labeled_statement          go to state 195
    compound_statement         go to state 196
    expression_statement       go to state 199
    selection_statement        go to state 200
    iteration_statement        go to state 201
    jump_statement             go to state 202


State 268

  195 iteration_statement: FOR '(' . expression_statement M expression_statement ')' M statement
  196                    | FOR '(' . expression_statement M expression_statement M expression N ')' M statement

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    SEMICOLON           shift, and go to state 190
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 127
    expression                 go to state 192
    expression_statement       go to state 304


State 269

  197 jump_statement: GOTO IDENTIFIER . SEMICOLON

    SEMICOLON  shift, and go to state 305


State 270

  190 selection_statement: IF '(' . expression N ')' M statement N
  191                    | IF '(' . expression N ')' M statement N ELSE M statement

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 127
    expression                 go to state 306


State 271

  201 jump_statement: RETURN SEMICOLON .

    $default  reduce using rule 201 (jump_statement)


State 272

   81 expression: expression . COMMA assignment_expression
  200 jump_statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 307
    COMMA      shift, and go to state 224


State 273

  192 selection_statement: SWITCH '(' . expression ')' statement

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 127
    expression                 go to state 308


State 274

  193 iteration_statement: WHILE M . '(' expression ')' M statement

    '('  shift, and go to state 309


State 275

  179 labeled_statement: IDENTIFIER COLON . M statement

    $default  reduce using rule 8 (M)

    M  go to state 310


State 276

  188 expression_statement: expression SEMICOLON .

    $default  reduce using rule 188 (expression_statement)


State 277

  182 compound_statement: '{' block_item_list '}' .

    $default  reduce using rule 182 (compound_statement)


State 278

  185 block_item_list: block_item_list M . block_item

    AUTO                shift, and go to state 1
    BREAK               shift, and go to state 178
    CASE                shift, and go to state 179
    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    CONTINUE            shift, and go to state 180
    DEFAULT             shift, and go to state 181
    DO                  shift, and go to state 182
    ENUM                shift, and go to state 4
    EXTERN              shift, and go to state 5
    REGISTER            shift, and go to state 6
    FLOAT               shift, and go to state 7
    FOR                 shift, and go to state 183
    GOTO                shift, and go to state 184
    IF                  shift, and go to state 185
    INLINE              shift, and go to state 8
    LONG                shift, and go to state 9
    RESTRICT            shift, and go to state 10
    RETURN              shift, and go to state 186
    SHORT               shift, and go to state 11
    SIGNED              shift, and go to state 12
    SIZEOF              shift, and go to state 72
    STATIC              shift, and go to state 13
    SWITCH              shift, and go to state 187
    INT                 shift, and go to state 14
    DOUBLE              shift, and go to state 15
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    WHILE               shift, and go to state 188
    BOOL                shift, and go to state 19
    COMPLEX             shift, and go to state 20
    IMAGINARY           shift, and go to state 21
    IDENTIFIER          shift, and go to state 189
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    SEMICOLON           shift, and go to state 190
    '('                 shift, and go to state 86
    '{'                 shift, and go to state 107

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 127
    expression                 go to state 192
    declaration                go to state 193
    declaration_specifiers     go to state 59
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 194
    labeled_statement          go to state 195
    compound_statement         go to state 196
    block_item                 go to state 311
    expression_statement       go to state 199
    selection_statement        go to state 200
    iteration_statement        go to state 201
    jump_statement             go to state 202


State 279

  156 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 156 (parameter_declaration)


State 280

  143 direct_declarator: direct_declarator '(' changetable parameter_type_list ')' .

    $default  reduce using rule 143 (direct_declarator)


State 281

  153 parameter_type_list: parameter_list COMMA . ELLIPSIS
  155 parameter_list: parameter_list COMMA . parameter_declaration

    AUTO       shift, and go to state 1
    CHAR       shift, and go to state 2
    CONST      shift, and go to state 3
    ENUM       shift, and go to state 4
    EXTERN     shift, and go to state 5
    REGISTER   shift, and go to state 6
    FLOAT      shift, and go to state 7
    INLINE     shift, and go to state 8
    LONG       shift, and go to state 9
    RESTRICT   shift, and go to state 10
    SHORT      shift, and go to state 11
    SIGNED     shift, and go to state 12
    STATIC     shift, and go to state 13
    INT        shift, and go to state 14
    DOUBLE     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID       shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL       shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21
    ELLIPSIS   shift, and go to state 312

    declaration_specifiers   go to state 205
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    parameter_declaration    go to state 313


State 282

  159 identifier_list: identifier_list COMMA IDENTIFIER .

    $default  reduce using rule 159 (identifier_list)


State 283

  140 direct_declarator: direct_declarator '[' STATIC assignment_expression ']' .

    $default  reduce using rule 140 (direct_declarator)


State 284

  139 direct_declarator: direct_declarator '[' STATIC type_qualifier_list assignment_expression . ']'

    ']'  shift, and go to state 314


State 285

  141 direct_declarator: direct_declarator '[' type_qualifier_list STAR ']' .

    $default  reduce using rule 141 (direct_declarator)


State 286

  135 direct_declarator: direct_declarator '[' type_qualifier_list assignment_expression ']' .

    $default  reduce using rule 135 (direct_declarator)


State 287

   19 postfix_expression: '(' type_name ')' . '{' initializer_list '}'
   20                   | '(' type_name ')' . '{' initializer_list COMMA '}'
   28 unary_expression: SIZEOF '(' type_name ')' .

    '{'  shift, and go to state 290

    $default  reduce using rule 28 (unary_expression)


State 288

   19 postfix_expression: '(' type_name ')' . '{' initializer_list '}'
   20                   | '(' type_name ')' . '{' initializer_list COMMA '}'

    '{'  shift, and go to state 290


State 289

   81 expression: expression COMMA assignment_expression .

    $default  reduce using rule 81 (expression)


State 290

   19 postfix_expression: '(' type_name ')' '{' . initializer_list '}'
   20                   | '(' type_name ')' '{' . initializer_list COMMA '}'

    DOT  shift, and go to state 133
    '['  shift, and go to state 134

    $default  reduce using rule 166 (designation_opt)

    initializer_list  go to state 315
    designation_opt   go to state 136
    designation       go to state 137
    designator_list   go to state 138
    designator        go to state 139


State 291

   36 cast_expression: '(' type_name ')' cast_expression .

    $default  reduce using rule 36 (cast_expression)


State 292

  171 designator: '[' constant_expression ']' .

    $default  reduce using rule 171 (designator)


State 293

  163 initializer: '{' initializer_list COMMA '}' .

    $default  reduce using rule 163 (initializer)


State 294

  165 initializer_list: initializer_list COMMA designation_opt . initializer

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86
    '{'                 shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 105
    initializer                go to state 316


State 295

   22 argument_expression_list: argument_expression_list COMMA . assignment_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 317


State 296

   14 postfix_expression: postfix_expression '(' argument_expression_list ')' .

    $default  reduce using rule 14 (postfix_expression)


State 297

   12 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 12 (postfix_expression)


State 298

   62 logical_and_expression: logical_and_expression N AND M . inclusive_or_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 158
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 318


State 299

   64 logical_or_expression: logical_or_expression N OR M . logical_and_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 158
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 319


State 300

   66 conditional_expression: logical_or_expression N QUESTIONMARK M . expression N COLON M conditional_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 127
    expression                 go to state 320


State 301

  180 labeled_statement: CASE constant_expression COLON . statement

    BREAK               shift, and go to state 178
    CASE                shift, and go to state 179
    CONTINUE            shift, and go to state 180
    DEFAULT             shift, and go to state 181
    DO                  shift, and go to state 182
    FOR                 shift, and go to state 183
    GOTO                shift, and go to state 184
    IF                  shift, and go to state 185
    RETURN              shift, and go to state 186
    SIZEOF              shift, and go to state 72
    SWITCH              shift, and go to state 187
    WHILE               shift, and go to state 188
    IDENTIFIER          shift, and go to state 189
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    SEMICOLON           shift, and go to state 190
    '('                 shift, and go to state 86
    '{'                 shift, and go to state 107

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 127
    expression                 go to state 192
    statement                  go to state 321
    labeled_statement          go to state 195
    compound_statement         go to state 196
    expression_statement       go to state 199
    selection_statement        go to state 200
    iteration_statement        go to state 201
    jump_statement             go to state 202


State 302

  181 labeled_statement: DEFAULT COLON statement .

    $default  reduce using rule 181 (labeled_statement)


State 303

  194 iteration_statement: DO M statement . M WHILE '(' expression ')' SEMICOLON

    $default  reduce using rule 8 (M)

    M  go to state 322


State 304

  195 iteration_statement: FOR '(' expression_statement . M expression_statement ')' M statement
  196                    | FOR '(' expression_statement . M expression_statement M expression N ')' M statement

    $default  reduce using rule 8 (M)

    M  go to state 323


State 305

  197 jump_statement: GOTO IDENTIFIER SEMICOLON .

    $default  reduce using rule 197 (jump_statement)


State 306

   81 expression: expression . COMMA assignment_expression
  190 selection_statement: IF '(' expression . N ')' M statement N
  191                    | IF '(' expression . N ')' M statement N ELSE M statement

    COMMA  shift, and go to state 224

    $default  reduce using rule 9 (N)

    N  go to state 324


State 307

  200 jump_statement: RETURN expression SEMICOLON .

    $default  reduce using rule 200 (jump_statement)


State 308

   81 expression: expression . COMMA assignment_expression
  192 selection_statement: SWITCH '(' expression . ')' statement

    COMMA  shift, and go to state 224
    ')'    shift, and go to state 325


State 309

  193 iteration_statement: WHILE M '(' . expression ')' M statement

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 127
    expression                 go to state 326


State 310

  179 labeled_statement: IDENTIFIER COLON M . statement

    BREAK               shift, and go to state 178
    CASE                shift, and go to state 179
    CONTINUE            shift, and go to state 180
    DEFAULT             shift, and go to state 181
    DO                  shift, and go to state 182
    FOR                 shift, and go to state 183
    GOTO                shift, and go to state 184
    IF                  shift, and go to state 185
    RETURN              shift, and go to state 186
    SIZEOF              shift, and go to state 72
    SWITCH              shift, and go to state 187
    WHILE               shift, and go to state 188
    IDENTIFIER          shift, and go to state 189
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    SEMICOLON           shift, and go to state 190
    '('                 shift, and go to state 86
    '{'                 shift, and go to state 107

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 127
    expression                 go to state 192
    statement                  go to state 327
    labeled_statement          go to state 195
    compound_statement         go to state 196
    expression_statement       go to state 199
    selection_statement        go to state 200
    iteration_statement        go to state 201
    jump_statement             go to state 202


State 311

  185 block_item_list: block_item_list M block_item .

    $default  reduce using rule 185 (block_item_list)


State 312

  153 parameter_type_list: parameter_list COMMA ELLIPSIS .

    $default  reduce using rule 153 (parameter_type_list)


State 313

  155 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 155 (parameter_list)


State 314

  139 direct_declarator: direct_declarator '[' STATIC type_qualifier_list assignment_expression ']' .

    $default  reduce using rule 139 (direct_declarator)


State 315

   19 postfix_expression: '(' type_name ')' '{' initializer_list . '}'
   20                   | '(' type_name ')' '{' initializer_list . COMMA '}'
  165 initializer_list: initializer_list . COMMA designation_opt initializer

    COMMA  shift, and go to state 328
    '}'    shift, and go to state 329


State 316

  165 initializer_list: initializer_list COMMA designation_opt initializer .

    $default  reduce using rule 165 (initializer_list)


State 317

   22 argument_expression_list: argument_expression_list COMMA assignment_expression .

    $default  reduce using rule 22 (argument_expression_list)


State 318

   60 inclusive_or_expression: inclusive_or_expression . BITWISEOR exclusive_or_expression
   62 logical_and_expression: logical_and_expression N AND M inclusive_or_expression .

    BITWISEOR  shift, and go to state 175

    $default  reduce using rule 62 (logical_and_expression)


State 319

   62 logical_and_expression: logical_and_expression . N AND M inclusive_or_expression
   64 logical_or_expression: logical_or_expression N OR M logical_and_expression .

    AND       reduce using rule 9 (N)
    $default  reduce using rule 64 (logical_or_expression)

    N  go to state 176


State 320

   66 conditional_expression: logical_or_expression N QUESTIONMARK M expression . N COLON M conditional_expression
   81 expression: expression . COMMA assignment_expression

    COMMA  shift, and go to state 224

    $default  reduce using rule 9 (N)

    N  go to state 330


State 321

  180 labeled_statement: CASE constant_expression COLON statement .

    $default  reduce using rule 180 (labeled_statement)


State 322

  194 iteration_statement: DO M statement M . WHILE '(' expression ')' SEMICOLON

    WHILE  shift, and go to state 331


State 323

  195 iteration_statement: FOR '(' expression_statement M . expression_statement ')' M statement
  196                    | FOR '(' expression_statement M . expression_statement M expression N ')' M statement

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    SEMICOLON           shift, and go to state 190
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 127
    expression                 go to state 192
    expression_statement       go to state 332


State 324

  190 selection_statement: IF '(' expression N . ')' M statement N
  191                    | IF '(' expression N . ')' M statement N ELSE M statement

    ')'  shift, and go to state 333


State 325

  192 selection_statement: SWITCH '(' expression ')' . statement

    BREAK               shift, and go to state 178
    CASE                shift, and go to state 179
    CONTINUE            shift, and go to state 180
    DEFAULT             shift, and go to state 181
    DO                  shift, and go to state 182
    FOR                 shift, and go to state 183
    GOTO                shift, and go to state 184
    IF                  shift, and go to state 185
    RETURN              shift, and go to state 186
    SIZEOF              shift, and go to state 72
    SWITCH              shift, and go to state 187
    WHILE               shift, and go to state 188
    IDENTIFIER          shift, and go to state 189
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    SEMICOLON           shift, and go to state 190
    '('                 shift, and go to state 86
    '{'                 shift, and go to state 107

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 127
    expression                 go to state 192
    statement                  go to state 334
    labeled_statement          go to state 195
    compound_statement         go to state 196
    expression_statement       go to state 199
    selection_statement        go to state 200
    iteration_statement        go to state 201
    jump_statement             go to state 202


State 326

   81 expression: expression . COMMA assignment_expression
  193 iteration_statement: WHILE M '(' expression . ')' M statement

    COMMA  shift, and go to state 224
    ')'    shift, and go to state 335


State 327

  179 labeled_statement: IDENTIFIER COLON M statement .

    $default  reduce using rule 179 (labeled_statement)


State 328

   20 postfix_expression: '(' type_name ')' '{' initializer_list COMMA . '}'
  165 initializer_list: initializer_list COMMA . designation_opt initializer

    DOT  shift, and go to state 133
    '['  shift, and go to state 134
    '}'  shift, and go to state 336

    $default  reduce using rule 166 (designation_opt)

    designation_opt  go to state 294
    designation      go to state 137
    designator_list  go to state 138
    designator       go to state 139


State 329

   19 postfix_expression: '(' type_name ')' '{' initializer_list '}' .

    $default  reduce using rule 19 (postfix_expression)


State 330

   66 conditional_expression: logical_or_expression N QUESTIONMARK M expression N . COLON M conditional_expression

    COLON  shift, and go to state 337


State 331

  194 iteration_statement: DO M statement M WHILE . '(' expression ')' SEMICOLON

    '('  shift, and go to state 338


State 332

  195 iteration_statement: FOR '(' expression_statement M expression_statement . ')' M statement
  196                    | FOR '(' expression_statement M expression_statement . M expression N ')' M statement

    ')'  shift, and go to state 339

    $default  reduce using rule 8 (M)

    M  go to state 340


State 333

  190 selection_statement: IF '(' expression N ')' . M statement N
  191                    | IF '(' expression N ')' . M statement N ELSE M statement

    $default  reduce using rule 8 (M)

    M  go to state 341


State 334

  192 selection_statement: SWITCH '(' expression ')' statement .

    $default  reduce using rule 192 (selection_statement)


State 335

  193 iteration_statement: WHILE M '(' expression ')' . M statement

    $default  reduce using rule 8 (M)

    M  go to state 342


State 336

   20 postfix_expression: '(' type_name ')' '{' initializer_list COMMA '}' .

    $default  reduce using rule 20 (postfix_expression)


State 337

   66 conditional_expression: logical_or_expression N QUESTIONMARK M expression N COLON . M conditional_expression

    $default  reduce using rule 8 (M)

    M  go to state 343


State 338

  194 iteration_statement: DO M statement M WHILE '(' . expression ')' SEMICOLON

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 127
    expression                 go to state 344


State 339

  195 iteration_statement: FOR '(' expression_statement M expression_statement ')' . M statement

    $default  reduce using rule 8 (M)

    M  go to state 345


State 340

  196 iteration_statement: FOR '(' expression_statement M expression_statement M . expression N ')' M statement

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 127
    expression                 go to state 346


State 341

  190 selection_statement: IF '(' expression N ')' M . statement N
  191                    | IF '(' expression N ')' M . statement N ELSE M statement

    BREAK               shift, and go to state 178
    CASE                shift, and go to state 179
    CONTINUE            shift, and go to state 180
    DEFAULT             shift, and go to state 181
    DO                  shift, and go to state 182
    FOR                 shift, and go to state 183
    GOTO                shift, and go to state 184
    IF                  shift, and go to state 185
    RETURN              shift, and go to state 186
    SIZEOF              shift, and go to state 72
    SWITCH              shift, and go to state 187
    WHILE               shift, and go to state 188
    IDENTIFIER          shift, and go to state 189
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    SEMICOLON           shift, and go to state 190
    '('                 shift, and go to state 86
    '{'                 shift, and go to state 107

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 127
    expression                 go to state 192
    statement                  go to state 347
    labeled_statement          go to state 195
    compound_statement         go to state 196
    expression_statement       go to state 199
    selection_statement        go to state 200
    iteration_statement        go to state 201
    jump_statement             go to state 202


State 342

  193 iteration_statement: WHILE M '(' expression ')' M . statement

    BREAK               shift, and go to state 178
    CASE                shift, and go to state 179
    CONTINUE            shift, and go to state 180
    DEFAULT             shift, and go to state 181
    DO                  shift, and go to state 182
    FOR                 shift, and go to state 183
    GOTO                shift, and go to state 184
    IF                  shift, and go to state 185
    RETURN              shift, and go to state 186
    SIZEOF              shift, and go to state 72
    SWITCH              shift, and go to state 187
    WHILE               shift, and go to state 188
    IDENTIFIER          shift, and go to state 189
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    SEMICOLON           shift, and go to state 190
    '('                 shift, and go to state 86
    '{'                 shift, and go to state 107

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 127
    expression                 go to state 192
    statement                  go to state 348
    labeled_statement          go to state 195
    compound_statement         go to state 196
    expression_statement       go to state 199
    selection_statement        go to state 200
    iteration_statement        go to state 201
    jump_statement             go to state 202


State 343

   66 conditional_expression: logical_or_expression N QUESTIONMARK M expression N COLON M . conditional_expression

    SIZEOF              shift, and go to state 72
    IDENTIFIER          shift, and go to state 73
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    '('                 shift, and go to state 86

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 158
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 349


State 344

   81 expression: expression . COMMA assignment_expression
  194 iteration_statement: DO M statement M WHILE '(' expression . ')' SEMICOLON

    COMMA  shift, and go to state 224
    ')'    shift, and go to state 350


State 345

  195 iteration_statement: FOR '(' expression_statement M expression_statement ')' M . statement

    BREAK               shift, and go to state 178
    CASE                shift, and go to state 179
    CONTINUE            shift, and go to state 180
    DEFAULT             shift, and go to state 181
    DO                  shift, and go to state 182
    FOR                 shift, and go to state 183
    GOTO                shift, and go to state 184
    IF                  shift, and go to state 185
    RETURN              shift, and go to state 186
    SIZEOF              shift, and go to state 72
    SWITCH              shift, and go to state 187
    WHILE               shift, and go to state 188
    IDENTIFIER          shift, and go to state 189
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    SEMICOLON           shift, and go to state 190
    '('                 shift, and go to state 86
    '{'                 shift, and go to state 107

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 127
    expression                 go to state 192
    statement                  go to state 351
    labeled_statement          go to state 195
    compound_statement         go to state 196
    expression_statement       go to state 199
    selection_statement        go to state 200
    iteration_statement        go to state 201
    jump_statement             go to state 202


State 346

   81 expression: expression . COMMA assignment_expression
  196 iteration_statement: FOR '(' expression_statement M expression_statement M expression . N ')' M statement

    COMMA  shift, and go to state 224

    $default  reduce using rule 9 (N)

    N  go to state 352


State 347

  190 selection_statement: IF '(' expression N ')' M statement . N
  191                    | IF '(' expression N ')' M statement . N ELSE M statement

    $default  reduce using rule 9 (N)

    N  go to state 353


State 348

  193 iteration_statement: WHILE M '(' expression ')' M statement .

    $default  reduce using rule 193 (iteration_statement)


State 349

   66 conditional_expression: logical_or_expression N QUESTIONMARK M expression N COLON M conditional_expression .

    $default  reduce using rule 66 (conditional_expression)


State 350

  194 iteration_statement: DO M statement M WHILE '(' expression ')' . SEMICOLON

    SEMICOLON  shift, and go to state 354


State 351

  195 iteration_statement: FOR '(' expression_statement M expression_statement ')' M statement .

    $default  reduce using rule 195 (iteration_statement)


State 352

  196 iteration_statement: FOR '(' expression_statement M expression_statement M expression N . ')' M statement

    ')'  shift, and go to state 355


State 353

  190 selection_statement: IF '(' expression N ')' M statement N .
  191                    | IF '(' expression N ')' M statement N . ELSE M statement

    ELSE  shift, and go to state 356

    $default  reduce using rule 190 (selection_statement)


State 354

  194 iteration_statement: DO M statement M WHILE '(' expression ')' SEMICOLON .

    $default  reduce using rule 194 (iteration_statement)


State 355

  196 iteration_statement: FOR '(' expression_statement M expression_statement M expression N ')' . M statement

    $default  reduce using rule 8 (M)

    M  go to state 357


State 356

  191 selection_statement: IF '(' expression N ')' M statement N ELSE . M statement

    $default  reduce using rule 8 (M)

    M  go to state 358


State 357

  196 iteration_statement: FOR '(' expression_statement M expression_statement M expression N ')' M . statement

    BREAK               shift, and go to state 178
    CASE                shift, and go to state 179
    CONTINUE            shift, and go to state 180
    DEFAULT             shift, and go to state 181
    DO                  shift, and go to state 182
    FOR                 shift, and go to state 183
    GOTO                shift, and go to state 184
    IF                  shift, and go to state 185
    RETURN              shift, and go to state 186
    SIZEOF              shift, and go to state 72
    SWITCH              shift, and go to state 187
    WHILE               shift, and go to state 188
    IDENTIFIER          shift, and go to state 189
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    SEMICOLON           shift, and go to state 190
    '('                 shift, and go to state 86
    '{'                 shift, and go to state 107

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 127
    expression                 go to state 192
    statement                  go to state 359
    labeled_statement          go to state 195
    compound_statement         go to state 196
    expression_statement       go to state 199
    selection_statement        go to state 200
    iteration_statement        go to state 201
    jump_statement             go to state 202


State 358

  191 selection_statement: IF '(' expression N ')' M statement N ELSE M . statement

    BREAK               shift, and go to state 178
    CASE                shift, and go to state 179
    CONTINUE            shift, and go to state 180
    DEFAULT             shift, and go to state 181
    DO                  shift, and go to state 182
    FOR                 shift, and go to state 183
    GOTO                shift, and go to state 184
    IF                  shift, and go to state 185
    RETURN              shift, and go to state 186
    SIZEOF              shift, and go to state 72
    SWITCH              shift, and go to state 187
    WHILE               shift, and go to state 188
    IDENTIFIER          shift, and go to state 189
    INTEGER_CONSTANT    shift, and go to state 74
    FLOATING_CONSTANT   shift, and go to state 75
    CHARACTER_CONSTANT  shift, and go to state 76
    STRING_LITERAL      shift, and go to state 77
    INCREMENT           shift, and go to state 78
    DECREMENT           shift, and go to state 79
    BITWISEAND          shift, and go to state 80
    STAR                shift, and go to state 81
    PLUS                shift, and go to state 82
    MINUS               shift, and go to state 83
    NOT                 shift, and go to state 84
    EXCLAMATION         shift, and go to state 85
    SEMICOLON           shift, and go to state 190
    '('                 shift, and go to state 86
    '{'                 shift, and go to state 107

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    and_expression             go to state 99
    exclusive_or_expression    go to state 100
    inclusive_or_expression    go to state 101
    logical_and_expression     go to state 102
    logical_or_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 127
    expression                 go to state 192
    statement                  go to state 360
    labeled_statement          go to state 195
    compound_statement         go to state 196
    expression_statement       go to state 199
    selection_statement        go to state 200
    iteration_statement        go to state 201
    jump_statement             go to state 202


State 359

  196 iteration_statement: FOR '(' expression_statement M expression_statement M expression N ')' M statement .

    $default  reduce using rule 196 (iteration_statement)


State 360

  191 selection_statement: IF '(' expression N ')' M statement N ELSE M statement .

    $default  reduce using rule 191 (selection_statement)
